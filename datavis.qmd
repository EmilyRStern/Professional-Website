---
title: "Data Visualization Assignments"
format: 
  html:
    code-fold: true
    code-summary: "Show the code"
---

```{r include = FALSE}
library(tidyverse)
library(gsubfn)
```

```{=html}
<style>
details summary {
    display: inline-flex;
    align-items: center;
    cursor: pointer;
}

details summary h2 {
    display: inline;
    margin-left: 10px; /* Adds a small gap between the triangle and the header */
}

.figure-container {
      position: relative;
      display: inline-block;
      border: 5px solid #e9ce6c;
      padding: 1px;
      margin: 25px;
  }
  
</style>
```
This page contains assignments for my Data Visualization class.

Click on the assignment heading to hide/reveal content.

<details>

<summary>

## Assignment 1

</summary>

### Anscombe Example (Fancy)

```{r}

## Fancy version (per help file)

ff <- y ~ x
mods <- setNames(as.list(1:4), paste0("lm", 1:4))

# Plot using for loop
for(i in 1:4) {
  ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
  ## or   ff[[2]] <- as.name(paste0("y", i))
  ##      ff[[3]] <- as.name(paste0("x", i))
  mods[[i]] <- lmi <- lm(ff, data = anscombe)
  print(anova(lmi))
}

sapply(mods, coef)  # Note the use of this function
lapply(mods, function(fm) coef(summary(fm)))

# Preparing for the plots
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))

# Plot charts using for loop
for(i in 1:4) {
  ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
  plot(ff, data = anscombe, col = "red", pch = 21, bg = "orange", cex = 1.2,
       xlim = c(3, 19), ylim = c(3, 13))
  abline(mods[[i]], col = "blue")
}
mtext("Anscombe's 4 Regression data sets", outer = TRUE, cex = 1.5)
par(op)
```

### Generative Art

::: grid
::: g-col-4
::: {.figure-container style="width"}
![Anders Hoff, Plotter drawing (2018)](data/data_visualization/Anders+Hoff.jpg){width="250" height="250"}
:::
:::

::: g-col-4
::: figure-container
![M. Hansmeyer, Platonic Solids (2011)](data/data_visualization/Platonic+Solids.jpg){width="250" height="250"}
:::
:::

::: g-col-4
::: figure-container
![Mark J. Stock, Sprawl (2009)](data/data_visualization/Sprawl+Generative+Art.jpeg){width="250" height="250"}
:::
:::
:::

### Fall Leaves

```{r}
# Define elements in plant art
# Each image corresponds to a different axiom, rules, angle and depth

# Leaf of Fall

axiom="X"
rules=list("X"="F-[[X]+X]+F[+FX]-X", "F"="FF")
angle=22.5
depth=6


for (i in 1:depth) axiom=gsubfn(".", rules, axiom)

actions=str_extract_all(axiom, "\\d*\\+|\\d*\\-|F|L|R|\\[|\\]|\\|") %>% unlist

status=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))
points=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)


# Generating data
# Note: may take a minute or two

for (action in actions)
{
  if (action=="F")
  {
    x=points[1, "x1"]+cos(points[1, "alfa"]*(pi/180))
    y=points[1, "y1"]+sin(points[1, "alfa"]*(pi/180))
    points[1,"x2"]=x
    points[1,"y2"]=y
    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,
               alfa=points[1, "alfa"],
               depth=points[1,"depth"]) %>% rbind(points)->points
  }
  if (action %in% c("+", "-")){
    alfa=points[1, "alfa"]
    points[1, "alfa"]=eval(parse(text=paste0("alfa",action, angle)))
  }
  if(action=="["){
    data.frame(x=points[1, "x1"], y=points[1, "y1"], alfa=points[1, "alfa"]) %>%
      rbind(status) -> status
    points[1, "depth"]=points[1, "depth"]+1
  }
  
  if(action=="]"){
    depth=points[1, "depth"]
    points[-1,]->points
    data.frame(x1=status[1, "x"], y1=status[1, "y"], x2=NA, y2=NA,
               alfa=status[1, "alfa"],
               depth=depth-1) %>%
      rbind(points) -> points
    status[-1,]->status
  }
}

ggplot() +
  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),
               lineend = "round",
               color="darkslategrey", 
               data=na.omit(points)) +
  coord_fixed(ratio = 1) +
  theme_void() 
```

### Chart Critique

::: figure-container
![Source: Wilkinson, L. (2005). The Grammar of Graphics (2nd ed., p. 130). Springer. https://doi.org10.1007/0-387-28695-0](data/data_visualization/A1_graph_critique.png)
:::

I find this graph is easy to understand while still being unique. Three-dimensional visualizations offer more  information than their two-dimensional counterparts, but are convoluted and take a long time to process.  

Traditional choropleth maps have caveats. They typically require a legend, and the degree of change between each color is arbitrary. In this case the upper facet of the graph acts as a key for the lower, as well as clarifies the degree of change that exists between each color.The lower facet anchors the upper facet in space, allowing for quick insights that would not be possible without strong familiarity with the longitude and latitude of the United States.  

Furthermore, this visualizations allows users to extract data at varying degrees of specificity. We can quickly see that California has less variation than the rest of the United States using the bottom facet, but could look further into variations within the state using the upper. 
This makes the visualization useful for a wide variety of users.

</details>
