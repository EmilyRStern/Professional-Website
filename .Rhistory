## Data Visualization
## Objective: Identify data or model problems using visualization
## Anscombe (1973) Quartlet
data(anscombe)  # Load Anscombe's data
View(anscombe) # View the data
summary(anscombe)
## Simple version
plot(anscombe$x1,anscombe$y1)
summary(anscombe)
# Create four model objects
lm1 <- lm(y1 ~ x1, data=anscombe)
summary(lm1)
lm2 <- lm(y2 ~ x2, data=anscombe)
summary(lm2)
lm3 <- lm(y3 ~ x3, data=anscombe)
summary(lm3)
lm4 <- lm(y4 ~ x4, data=anscombe)
summary(lm4)
plot(anscombe$x1,anscombe$y1)
abline(coefficients(lm1))
plot(anscombe$x2,anscombe$y2)
abline(coefficients(lm2))
plot(anscombe$x3,anscombe$y3)
abline(coefficients(lm3))
plot(anscombe$x4,anscombe$y4)
abline(coefficients(lm4))
## Fancy version (per help file)
ff <- y ~ x
mods <- setNames(as.list(1:4), paste0("lm", 1:4))
# Plot using for loop
for(i in 1:4) {
ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
## or   ff[[2]] <- as.name(paste0("y", i))
##      ff[[3]] <- as.name(paste0("x", i))
mods[[i]] <- lmi <- lm(ff, data = anscombe)
print(anova(lmi))
}
sapply(mods, coef)  # Note the use of this function
lapply(mods, function(fm) coef(summary(fm)))
# Preparing for the plots
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))
# Plot charts using for loop
for(i in 1:4) {
ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
plot(ff, data = anscombe, col = "red", pch = 21, bg = "orange", cex = 1.2,
xlim = c(3, 19), ylim = c(3, 13))
abline(mods[[i]], col = "blue")
}
mtext("Anscombe's 4 Regression data sets", outer = TRUE, cex = 1.5)
par(op)
## Fancy version (per help file)
ff <- y ~ x
mods <- setNames(as.list(1:4), paste0("lm", 1:4))
# Plot using for loop
for(i in 1:4) {
ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
## or   ff[[2]] <- as.name(paste0("y", i))
##      ff[[3]] <- as.name(paste0("x", i))
mods[[i]] <- lmi <- lm(ff, data = anscombe)
print(anova(lmi))
}
sapply(mods, coef)  # Note the use of this function
lapply(mods, function(fm) coef(summary(fm)))
# Preparing for the plots
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))
# Plot charts using for loop
for(i in 1:4) {
ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
plot(ff, data = anscombe, col = "red", pch = 21, bg = "orange", cex = 1.2,
xlim = c(3, 19), ylim = c(3, 13))
abline(mods[[i]], col = "blue")
}
mtext("Anscombe's 4 Regression data sets", outer = TRUE, cex = 1.5)
par(op)
library(tidytuesdayR)
library(tidyverse)
library(leaflet)
library(leaflet.extras2)
library(sf)
unique_sightings <- read.csv("data/ufo_sightings/us_ufo_sightings")
us_regions <- read.csv("data/ufo_sightings/census_US_regions.csv")
min(unique_sightings$reported_date_time)
max(unique_sightings$reported_date_time)
jittered <- unique_sightings %>%
mutate(
jittered_lat = jitter(latitude, amount = 0.0001),
jittered_lon = jitter(longitude, amount = 0.0002)
)
ufo_sf <- jittered %>%
st_as_sf(coords = c("longitude","latitude"), crs=4326)
ufo_sf_20s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "1925-01-01")
ufo_sf_30s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "1935-01-01" & ufo_sf$reported_date_time > "1925-01-01")
ufo_sf_40s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "1945-01-01" & ufo_sf$reported_date_time > "1935-01-01")
ufo_sf_50s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "1955-01-01" & ufo_sf$reported_date_time > "1945-01-01")
ufo_sf_60s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "1965-01-01" & ufo_sf$reported_date_time > "1955-01-01")
ufo_sf_70s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "1975-01-01" & ufo_sf$reported_date_time > "1965-01-01")
ufo_sf_80s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "1985-01-01" & ufo_sf$reported_date_time > "1975-01-01")
ufo_sf_90s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "1995-01-01" & ufo_sf$reported_date_time > "1985-01-01")
ufo_sf_00s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "2005-01-01" & ufo_sf$reported_date_time > "1995-01-01")
ufo_sf_10s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "2015-01-01" & ufo_sf$reported_date_time > "2005-01-01")
ufo_sf_2020s <- ufo_sf %>%
filter(ufo_sf$reported_date_time < "2025-01-01" & ufo_sf$reported_date_time > "2015-01-01")
UFOIcon <- makeIcon(
iconUrl = "http://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "http://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
